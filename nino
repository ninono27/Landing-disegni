 <!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Disegna e invia il tuo disegno</title>
    <style>
        /* Stile base */
        body, html {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            background-color: #f0f0f0;
        }
        canvas {
            border: 1px solid #000;
        }
        #controls {
            position: absolute;
            top: 10px;
            left: 10px;
        }
        #controls button, #controls input {
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <div id="controls">
        <input type="color" id="colorPicker" value="#000000">
        <input type="range" id="brushSize" min="1" max="10" value="5">
        <button id="clearCanvas">Pulisci</button>
        <button id="download">Scarica</button>
        <button id="upload">Invia il disegno</button>
    </div>
    <canvas id="drawingCanvas" width="800" height="600"></canvas>

    <script>
        const canvas = document.getElementById('drawingCanvas');
        const ctx = canvas.getContext('2d');
        let drawing = false;

        canvas.addEventListener('mousedown', startDrawing);
        canvas.addEventListener('mouseup', stopDrawing);
        canvas.addEventListener('mousemove', draw);

        canvas.addEventListener('touchstart', startDrawing);
        canvas.addEventListener('touchend', stopDrawing);
        canvas.addEventListener('touchmove', draw);

        function startDrawing(event) {
            drawing = true;
            ctx.beginPath();
            const { x, y } = getCursorPosition(event);
            ctx.moveTo(x, y);
        }

        function stopDrawing() {
            drawing = false;
            ctx.closePath();
        }

        function draw(event) {
            if (!drawing) return;
            const { x, y } = getCursorPosition(event);
            ctx.lineTo(x, y);
            ctx.strokeStyle = document.getElementById('colorPicker').value;
            ctx.lineWidth = document.getElementById('brushSize').value;
            ctx.stroke();
        }

        function getCursorPosition(event) {
            const rect = canvas.getBoundingClientRect();
            let x, y;
            if (event.touches) {
                x = event.touches[0].clientX - rect.left;
                y = event.touches[0].clientY - rect.top;
            } else {
                x = event.clientX - rect.left;
                y = event.clientY - rect.top;
            }
            return { x, y };
        }

        document.getElementById('clearCanvas').addEventListener('click', () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        });

        document.getElementById('download').addEventListener('click', () => {
            const link = document.createElement('a');
            link.download = 'disegno.png';
            link.href = canvas.toDataURL();
            link.click();
        });

        // Invia il disegno al server
        document.getElementById('upload').addEventListener('click', () => {
            const imageData = canvas.toDataURL('image/png');
            
            fetch('/upload', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ image: imageData })
            })
            .then(response => response.json())
            .then(data => {
                alert('Disegno caricato con successo!');
            })
            .catch(error => {
                console.error('Errore durante il caricamento:', error);
            });
        });
    </script>
</body>
</html>
